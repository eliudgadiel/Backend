<h2 > Productos en el Carrito id={{cart._id}} </h2>



<div class="cart-container">
    {{#each cart.products}}
    <div class="product-card">
        <img class="product-image" src="{{this.product.image}}" alt="{{this.product.title}}">
        <div class="product-details">
            <h5 class="product-title">{{this.product.title}}</h5>
            <p class="product-description">{{this.product.description}}</p>
            <p class="product-info"><strong>Precio:</strong> {{this.product.price}}</p>
            <p class="product-info"><strong>Código:</strong> {{this.product.code}}</p>
            <p class="product-info"><strong>Stock:</strong> {{this.product.stock}}</p>
            <p class="product-info"><strong>Cantidad:</strong> {{this.quantity}}</p>
            <button class="remove-button"  type="button" onclick="deleteProductCart('{{cart._id}}', '{{this.product._id}}')" >Eliminar del carrito</button>
        </div>
    </div>
    {{/each}}
</div>
<div class="boton">
    <a href="#" id="botonComprar">Comprar</a>
</div>


<script>
     const button = document.getElementById('botonComprar');
button.addEventListener('click', async() => {
    event.preventDefault();
    try {
        const res = await fetch('/pay/create-checkout-session', {
            method: 'POST'
        });
          const data = await res.json();

       await  checkoutCorreo();
        await checkout();
    
        window.location.href = data.url;
    } catch (error) {
        console.error(error);
        alert('Ocurrió un error durante la compra. Por favor, inténtalo de nuevo.');
    }
});
        
        const checkout = async () => {
    try {
      const response = await fetch(`/api/carts/{{cart._id}}/purchase`, {
        method: "GET",
      });
      const result = await response.json();
    
      if (result.status === 'error') {
        throw new Error(result.error);
      } else {
        const ticketDetails = result.payload;
        return ticketDetails;
      }
    } catch (error) {
      alert('Ocurrió un error: ' + error);
      throw error;
    }
  };
  
  const checkoutCorreo = () => {
    fetch(`/checkout/checkoutCorreo`, {
      method: "POST",
    })
      .then((result) => result.json())
      .then((result) => {
        if (result.status === 'error') {
          throw new Error(result.error);
        } else {
          console.log('Su compra fue enviada por correo');
        }
      })
      .catch(error => alert('Ocurrió un error: ' + error));
  };

deleteProductCart = (cid, pid) => {
  fetch(`/api/carts/{{cart._id}}/product/${pid}`, {
    method: "delete",
  })
    .then((result) => result.json())
    .then((result) => {
     if (result.status === 'error') throw new Error(result.error) 
        alert(`Producto Eliminado del carrito con éxito id=${result.payload._id}`);

    })
    .catch(error => alert('Ocurrio un error,' + error));
    
};


</script>




<style>

      h2 {
        font-size: 24px;
        color: #333;
        margin-bottom: 10px;
        text-align:  center;
    }
     .boton {
        text-align: center;
        margin-top: 20px;
        margin-left: 10px;
    }

      .boton a {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007BFF;
        color: #fff; 
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .boton a:hover {
        background-color: #0056b3;
    }
    .remove-button {
        background-color: #ff0000; 
        color: #ffffff; 
        padding: 5px 10px; 
        border: none;
        border-radius: 5px; 
        cursor: pointer; 
    }

    .remove-button:hover {
        background-color: #cc0000; 
    }
    .cart-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        margin-top: 20px;
    }

    .product-card {
        width: 300px;
        border: 1px solid #ddd;
        border-radius: 8px;
        margin: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
    }

    .product-card:hover {
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .product-image {
        width: 100%;
        height: auto;
        border-bottom: 1px solid #ddd;
    }

    .product-details {
        padding: 15px;
    }

    .product-title {
        font-size: 18px;
        margin-bottom: 5px;
    }

    .product-description {
        color: #555;
        margin-bottom: 10px;
    }

    .product-info {
        margin-bottom: 8px;
    }

    h2 {
        font-size: 24px;
    }

    a {
        text-decoration: none;
        color: #007BFF;
        font-weight: bold;
        margin-left: 10px;
    }

    a:hover {
        text-decoration: underline;
    }
</style>
